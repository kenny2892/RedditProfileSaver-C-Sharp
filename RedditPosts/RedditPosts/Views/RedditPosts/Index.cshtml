@model RedditPosts.ViewModels.RedditViewModel

@{
    ViewData["Title"] = "Upvoted Posts";
}

<h1>Upvoted Posts</h1>
<h4>Total Posts: @Model.DisplayPostCount</h4>

<p>
    <a asp-action="Create">Create New</a> | <button data-toggle="collapse" data-target="#inputFields">Show Filters</button>
</p>

<div id="inputFields" class="collapse">
    <form asp-controller="RedditPosts" asp-action="Index" method="get">
        <h3>Text Searches</h3>
        @if(Model.IsMobile)
        {
            <p>Title: @Html.TextBoxFor(vm => vm.TitleFilter)</p>
            <p>Author: @Html.TextBoxFor(vm => vm.AuthorFilter)</p>
            <p>Subreddit: @Html.TextBoxFor(vm => vm.SubredditFilter)</p>
        }

        else
        {
            <p>Title: @Html.TextBoxFor(vm => vm.TitleFilter) | Author: @Html.TextBoxFor(vm => vm.AuthorFilter) | Subreddit: @Html.TextBoxFor(vm => vm.SubredditFilter)</p>
        }

        <hr />
        <h3>Toggles</h3>
        <p>Saved Only: @Html.CheckBoxFor(vm => vm.SavedOnly) | Show Hidden: @Html.CheckBoxFor(vm => vm.ShowHidden)</p>

        <hr />
        <h3>Dropdowns</h3>
        <p>Nsfw: @Html.DropDownListFor(vm => vm.NsfwSetting, new SelectList(Enum.GetValues(typeof(NsfwSettings)))) | Sorting: @Html.DropDownListFor(vm => vm.SortingSetting, new SelectList(Enum.GetValues(typeof(SortingSettings)))) <span id="randomSeedDisplay"> | Current Seed: @Html.EditorFor(vm => vm.RandomizeSeed)</span></p>
        <hr />
        <h3>Content Types</h3>
        <p><button type="button" id="selectTypesBtn">Select All</button> | <button type="button" id="deselectTypesBtn">Deselect All</button></p>
        <p>
            @for(int i = 0; i < Model.ContentTypes.Count; i++)
            {
                List<ContentType> types = Enum.GetValues(typeof(ContentType)).Cast<ContentType>().ToList();

                <div style="display:inline-block">
                    <label>
                        <span>@types[i].GetDescription()</span>
                        <span>:</span>
                        <span>@Html.CheckBoxFor(vm => vm.ContentTypes[i], true)</span>
                    </label>

                    @if(i < Model.ContentTypes.Count - 1)
                    {
                        <span>|</span>
                    }
                </div>
            }
        </p>
        <p><input type="submit" value="Submit" /></p>
    </form>
</div>

<button type="button" id="autoScrollBtn">Auto Scroll</button>
<button onclick="topFunction()" id="topScrollBtn" title="Go to top">Top</button>


<table id="postTable" class="table" style="width:100%">
    <tbody>
    </tbody>
</table>

<h1 id="loadingPosts" style="text-align: center">LOADING POSTS</h1>

@section Scripts
{
    <script src="~/js/RedditPosts.js" asp-append-version="true"></script>
    <script async src="//embed.redditmedia.com/widgets/platform.js" charset="UTF-8"></script>

    <script>
        var scrolling = new Scrolling("postTable", "/RedditPosts/_RedditPosts", {vm:@Html.Raw(Json.Serialize(Model)) });
        var contentTypeEnum = @(Utility.EnumToString<ContentType>());
        var selectTypes = new SetSelect(contentTypeEnum);
        var autoScroll = new AutoScrollSetup();
        var randomSeedDisplay = new SetupRandomSeedDisplay();
    </script>
}
